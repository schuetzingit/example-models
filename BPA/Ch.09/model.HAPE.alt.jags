
model {

# -------------------------------------------------
# Parameters:
# s: true survival probability
# r: recovery prob
Processing function input....... 

Done. 
 
Beginning parallel processing using 3 cores. Console output will be suppressed.
# 2 recently dead (and recovered)
# 3 recently dead, but not recovered, or dead (absorbing)
# Observations (O):
# 1 seen alive
# 2 recovered dead
# 3 neither seen nor recovered
# -------------------------------------------------

# Priors and constraints
for (t in 1:(n.occasions-1)){
   s[t] <- mean.s #dunif(0, 1)
   p[t] <- mean.r #dunif(0, 1)
   r[t] <- mean.p #dunif(0, 1)
}

#p[1] <- 1
#p[2] ~ dunif(0, 1)
#p[3] ~ dunif(0, 1)
#p[4] <- 1

#r[1] <- 0
#r[2] <- 0
#r[3] ~ dunif(0, 1)
#r[4] ~ dunif(0, 1)

mean.s ~ dunif(0, 1)     # Prior for mean survival
mean.r ~ dunif(0, 1)     # Prior for mean recovery
mean.p ~ dunif(0, 1)     # Prior for mean recapture

# Define state-transition and observation matrices 	

for (i in 1:nind) {

   # Define probabilities of state S(t+1) given S(t)
   
   for (t in f[i]:(n.occasions-1)) {
      ps[1,i,t,1] <- s[t]
      ps[1,i,t,2] <- 1-s[t]  
      ps[1,i,t,3] <- 0
      ps[2,i,t,1] <- 0
      ps[2,i,t,2] <- 0
      ps[2,i,t,3] <- 1
      ps[3,i,t,1] <- 0
      ps[3,i,t,2] <- 0
      ps[3,i,t,3] <- 1

      # Define probabilities of O(t) given S(t)
      po[1,i,t,1] <- p[t]
      po[1,i,t,2] <- 0
      po[1,i,t,3] <- 1-p[t]
      po[2,i,t,1] <- 0
      po[2,i,t,2] <- r[t]
      po[2,i,t,3] <- 1-r[t]
      po[3,i,t,1] <- 0
      po[3,i,t,2] <- 0
      po[3,i,t,3] <- 1
      
      } #t
      
   } #i

  # Likelihood 
  for (i in 1:nind) {

   # Define latent state at first capture
   z[i,f[i]] <- y[i,f[i]]
   
   for (t in (f[i]+1):n.occasions) {
   
      # State process: draw S(t) given S(t-1)
      z[i,t] ~ dcat(ps[z[i,t-1], i, t-1,])
      
      # Observation process: draw O(t) given S(t)
      y[i,t] ~ dcat(po[z[i,t], i, t-1,])
      
    } #t
   
  } #i
}

