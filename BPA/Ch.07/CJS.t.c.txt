
    
  model {
  
    # priors
    
    for (i in 1:nInd) {
    
      for (t in f1[i]:(nOcc - 1)) {
      
        phi[i,t] <- alpha[t]
        
      }
      
    }
    
    for (t in 1:(nOcc - 1)) {
      
        alpha[t] ~ dunif(0,1)

      }

    p ~ dunif(0,1)

    
    # likelihood
    
    for (i in 1:nInd) {
    
      # define latent state at first capture
      
      z[i,f1[i]] <- 1
      
      for (t in (f1[i] + 1):nOcc) {
      
        # state process
        
        z[i,t] ~ dbern(mu1[i,t])
        mu1[i,t] <- phi[i,t-1] * z[i,t-1]
        
        # observation process
        
        y[i,t] ~ dbern(mu2[i,t])
        mu2[i,t] <- p * z[i,t]
        
      }
    
    }
  
  }
  
  
